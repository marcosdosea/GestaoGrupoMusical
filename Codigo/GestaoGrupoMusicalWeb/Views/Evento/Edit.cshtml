@model GestaoGrupoMusicalWeb.Models.EventoCreateViewlModel

@{
    ViewData["Title"] = "Editar Evento";
    ViewData["Evento"] = "Evento";
    ViewData["Edit"] = "Editar";
}

<hr />
<div class="row">
    <div class="col-md-8">
        <h1 class="p-3 bg-danger  bg-opacity-75 text-white fs-5">Editar Evento Musical</h1>
        <nav>
            <ol class="breadcrumb px-3">
                <strong>
                    <a class="text-danger text-opacity-75" asp-action="Index">@ViewData["Evento"]</a>
                    <spn class="text-secondary"><i class="text-dark fa-sharp fa-solid fa-angle-right fa-xs"></i> @ViewData["Edit"]</spn>
                </strong>
            </ol>
        </nav>
        <hr />
        <br />
        <form id="formEdit" asp-action="Edit">
            <div class="container">
                <div class="row">
                    <div class="form-group col-xxl-4">
                        <label asp-for="DataHoraInicio" class="control-label"></label>
                        <input asp-for="DataHoraInicio" class="form-control" />
                        <span asp-validation-for="DataHoraInicio" class="text-danger"></span>
                    </div>
                    <div class="form-group col-xxl-4">
                        <label asp-for="DataHoraFim" class="control-label"></label>
                        <input asp-for="DataHoraFim" class="form-control" />
                        <span asp-validation-for="DataHoraFim" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="container">
                <div class="row">
                    <div class="form-group col-xl">
                        <label asp-for="IdRegentes" class="control-label"></label>
                        <div class="border rounded p-3" style="max-height: 200px; overflow-y: auto;">
                            @if (Model.ListaPessoa != null && Model.ListaPessoa.Any())
                            {
                                @foreach (var regente in Model.ListaPessoa)
                                {
                                    <div class="form-check">
                                        <input class="form-check-input regente-checkbox"
                                               type="checkbox"
                                               value="@regente.Value"
                                               id="regente_@regente.Value"
                                               onchange="updateRegenteSelection()">
                                        <label class="form-check-label" for="regente_@regente.Value">
                                            @regente.Text
                                        </label>
                                    </div>
                                }
                            }
                            else
                            {
                                <p class="text-muted">Nenhum regente cadastrado</p>
                            }
                    </div>
                        <select multiple asp-for="IdRegentes" class="d-none" id="hiddenRegenteSelect">
                        </select>
                        <span asp-validation-for="IdRegentes" class="text-danger"></span>
                        <small class="form-text text-muted">
                            <span id="regenteCount">0</span> regente(s) selecionado(s)
                        </small>
                </div>
            </div>
            <div class="container">
                <div class="form-group">
                    <label asp-for="IdFigurinoSelecionado" class="control-label"></label>
                    <select asp-items="@Model.FigurinoList" asp-for="IdFigurinoSelecionado" class="form-select"></select>
                    <span asp-validation-for="IdFigurinoSelecionado" class="text-danger"></span>
                </div>
            </div>

            <div class="container">
                <div class="form-group col-md-12">
                    <label asp-for="Local" class="control-label"></label>
                    <textarea asp-for="Local" class="form-control" maxlength="100" id="linkTextAreaLocal" oninput="updateCharacterCountLocal()"></textarea>
                    <span asp-validation-for="Local" class="text-danger"></span>
                    <small id="characterCountLocal">0/100</small>
                </div>
            </div>
            <div class="container">
                <div class="form-group col-md-12">
                    <label asp-for="Repertorio" class="control-label"></label>
                    <textarea asp-for="Repertorio" class="form-control" maxlength="100" id="linkTextAreaRepertorio" oninput="updateCharacterCountRepertorio()"></textarea>
                    <span asp-validation-for="Repertorio" class="text-danger"></span>
                    <small id="characterCountRepertorio">0/100</small>
                </div>
            </div>
            <br />
            <br />
            <div class="container">
                <div class="row d-flex flex-column-reverse d-grig gap-2 mx-auto d-flex flex-sm-column-reverse flex-xl-row">
                    <div class="col-5 d-none d-sm-block"></div>
                    <a class="btn btn-light text-secondary border border-secondary d-grid gap-2 col-sm" asp-controller="Evento" asp-action="Index"> Voltar </a>
                    <input type="submit" value="Salvar" class="btn btn-secondary d-grid gap-2 col-sm " />
                </div>
            </div>
        </form>
    </div>
</div>

<script>

    function updateRegenteSelection() {
        const checkboxes = document.querySelectorAll('.regente-checkbox:checked');
        const hiddenSelect = document.getElementById('hiddenRegenteSelect');
        const countSpan = document.getElementById('regenteCount');
        // Limpar options existentes
        hiddenSelect.innerHTML = '';
        // Adicionar options para cada checkbox marcado
        checkboxes.forEach(checkbox => {
            const option = document.createElement('option');
            option.value = checkbox.value;
            option.selected = true;
            hiddenSelect.appendChild(option);
        });
        // Atualizar contador
        countSpan.textContent = checkboxes.length;
    }

    function updateCharacterCountLocal() {
        var textArea = document.getElementById('linkTextAreaLocal');
        var charCount = textArea.value.length;
        var charLimitFromGrupoMusical = textArea.maxLength;
        document.getElementById('characterCountLocal').innerText = charCount + '/' + charLimitFromGrupoMusical;
    }

    function updateCharacterCountRepertorio() {
        var textArea = document.getElementById('linkTextAreaRepertorio');
        var charCount = textArea.value.length;
        var charLimitFromGrupoMusical = textArea.maxLength;
        document.getElementById('characterCountRepertorio').innerText = charCount + '/' + charLimitFromGrupoMusical;
    }

    document.addEventListener('DOMContentLoaded', function () {
        updateCharacterCountLocal();
        updateCharacterCountRepertorio();
    });
</script>

<script>
    window.addEventListener("load", () => {
        fillAutocomplete('@(Html.Raw(Model.JsonLista))', "regentes", "IdRegentes", "formEdit", "O campo Regentes é obrigatório");
    });
</script>

@section Header {
    @{
        await Html.RenderPartialAsync("_AutoCompleteCssPartial");
    }
}
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        await Html.RenderPartialAsync("_EnablePopoversPartial");
        await Html.RenderPartialAsync("_AutoCompletePartial");
    }
}
