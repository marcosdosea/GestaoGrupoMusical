@model GestaoGrupoMusicalWeb.Models.EnsaioViewModel
@{
    ViewData["Title"] = "Novo Ensaio";
    ViewData["Ensaio"] = "Ensaio";
    ViewData["Create"] = "Cadastro";
}
<partial name="_Notificar">

    <div class="row">
        <div class="col-md-8">
            <h1 class="p-3 bg-danger  bg-opacity-75 text-white fs-5">Novo Ensaio</h1>
            <nav>
                <ol class="breadcrumb px-3">
                    <strong>
                        <a class="text-danger text-opacity-75" asp-action="Index">@ViewData["Ensaio"]</a>
                        <spn class="text-secondary"><i class="text-dark fa-sharp fa-solid fa-angle-right fa-xs"></i> @ViewData["Create"]</spn>
                    </strong>
                </ol>
            </nav>
            <hr />
            <br />
            <form id="formCreate" asp-action="Create">
                <div class="container">
                    <div class="row">
                        <div class="form-group col-xl-4">
                            <label asp-for="DataHoraInicio" class="control-label"></label>
                            <input asp-for="DataHoraInicio" class="form-control" />
                            <span asp-validation-for="DataHoraInicio" class="text-danger"></span>
                        </div>
                        <div class="form-group col-xl-4">
                            <label asp-for="DataHoraFim" class="control-label"></label>
                            <input asp-for="DataHoraFim" class="form-control" />
                            <span asp-validation-for="DataHoraFim" class="text-danger"></span>
                        </div>
                        <div class="form-group col-xl">
                            <label asp-for="Tipo" class="control-label"></label>
                            <select asp-for="Tipo" class="form-select" asp-items="Html.GetEnumSelectList<Tipo>()" onchange="handleTipoChange()">
                            </select>
                            <span asp-validation-for="Tipo" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="form-group col-xl">
                            <label asp-for="IdRegentes" class="control-label"></label>
                            <div class="border rounded p-3" style="max-height: 200px; overflow-y: auto;">
                                @if (Model.ListaPessoa != null && Model.ListaPessoa.Any())
                                {
                                    @foreach (var regente in Model.ListaPessoa)
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input regente-checkbox"
                                                   type="checkbox"
                                                   value="@regente.Value"
                                                   id="regente_@regente.Value"
                                                   onchange="updateRegenteSelection()">
                                            <label class="form-check-label" for="regente_@regente.Value">
                                                @regente.Text
                                            </label>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p class="text-muted">Nenhum regente cadastrado</p>
                                }
                            </div>
                            <!-- Hidden field para enviar os valores selecionados -->
                            <select multiple asp-for="IdRegentes" class="d-none" id="hiddenRegenteSelect">
                            </select>
                            <span asp-validation-for="IdRegentes" class="text-danger"></span>
                            <small class="form-text text-muted">
                                <span id="regenteCount">0</span> regente(s) selecionado(s)
                            </small>
                        </div>
                    </div>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="form-group">
                            <label asp-for="IdFigurinoSelecionado" class="control-label"></label>
                            <select asp-items="@Model.ListaFigurino" asp-for="IdFigurinoSelecionado" class="form-select"></select>
                            <span asp-validation-for="IdFigurinoSelecionado" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="form-group">
                            <label asp-for="Local" class="control-label"></label>
                            <input asp-for="Local" class="form-control" />
                            <span asp-validation-for="Local" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="row">
                            <div class="form-group">
                                <label asp-for="Repertorio" class="control-label"></label>
                                <textarea asp-for="Repertorio" class="form-control"></textarea>
                                <span asp-validation-for="Repertorio" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="form-group col-xl-4">
                            <label asp-for="PresencaObrigatoria" class="control-label"></label>
                            <div class="d-flex justify-content-around" id="presencaObrigatoriaContainer">
                                @{
                                    foreach (var item in Model.Obrigatorio)
                                    {
                                        <div>
                                            <label for="@item.Key">@item.Key</label>
                                            <input class="form-check-input presenca-radio" type="radio" value="@item.Value" asp-for="PresencaObrigatoria" id="@item.Key" />
                                        </div>
                                    }
                                }
                            </div>
                            <span asp-validation-for="PresencaObrigatoria" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <br />
                <br />
                <div class="container">
                    <div class="row d-flex flex-column-reverse d-grig gap-2 mx-auto d-flex flex-sm-column-reverse flex-xl-row">
                        <div class="col-5 d-none d-sm-block"></div>
                        <input type="submit" value="Adicionar" class="btn btn-secondary d-grid gap-2 col-sm " />
                        <a class="btn btn-light text-secondary border border-secondary d-grid gap-2 col-sm" asp-controller="Ensaio" asp-action="Index"> Voltar </a>       
                    </div>
                </div>
            </form>
        </div>
    </div>

    <script>
        function updateRegenteSelection() {
            const checkboxes = document.querySelectorAll('.regente-checkbox:checked');
            const hiddenSelect = document.getElementById('hiddenRegenteSelect');
            const countSpan = document.getElementById('regenteCount');

            // Limpar options existentes
            hiddenSelect.innerHTML = '';

            // Adicionar options para cada checkbox marcado
            checkboxes.forEach(checkbox => {
                const option = document.createElement('option');
                option.value = checkbox.value;
                option.selected = true;
                hiddenSelect.appendChild(option);
            });

            // Atualizar contador
            countSpan.textContent = checkboxes.length;
        }

        function handleTipoChange() {
            const tipoSelect = document.querySelector('select[name="Tipo"]');
            const presencaRadios = document.querySelectorAll('.presenca-radio');
            const presencaSimRadio = document.querySelector('input[value="True"]');

            if (tipoSelect && tipoSelect.value === '0') { // Assumindo que FIXO é valor 0
                // Marcar "Sim" automaticamente
                if (presencaSimRadio) {
                    presencaSimRadio.checked = true;
                }
                // Desabilitar todos os radio buttons
                presencaRadios.forEach(radio => {
                    radio.disabled = true;
                });
            } else {
                // Habilitar todos os radio buttons
                presencaRadios.forEach(radio => {
                    radio.disabled = false;
                });
            }
        }

        // Executar quando a página carregar
        document.addEventListener('DOMContentLoaded', function () {
            handleTipoChange();
        });
    </script>

    @section Header {
        @{
            await Html.RenderPartialAsync("_AutoCompleteCssPartial");
        }
    }
    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
            await Html.RenderPartialAsync("_EnablePopoversPartial");
            await Html.RenderPartialAsync("_AutoCompletePartial");
        }
    }
